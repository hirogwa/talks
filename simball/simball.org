#+TITLE: Emacs - Practical Introduction to the Addictive Editor
#+AUTHOR: Hiroki Nakagawa

* HELLO!

* BACKGROUND

** about this talk

*** What is Emacs?

[[http://en.wikipedia.org/wiki/Emacs][Emacs - Wikipedia]]

- Editor
- programmable, extensible

This talk is about my playing with Emacs for about two weeks.
- your Emacs environment grows as you use it
- we want some base knowledge for a start

*** Why?

- "looks cool"
- "good engineers use it"
- mysteries
 - "not an editor but an environment?"
 - "programmable editor?"

*** Who?

** editors and you

What editors/IDEs do you use?

[[http://www.google.ca/trends/explore#q%3D%252Fm%252F01yp0m%252C%2520%252Fm%252F07zh7%252C%2520%252Fm%252F0b6h18n%252C%2520%252Fm%252F0_x5x3g&cmpt%3Dq][trends 1]]

[[http://www.google.ca/trends/explore#q%3D%252Fm%252F01yp0m%252C%2520%252Fm%252F07zh7%252C%2520%252Fm%252F0b6h18n%252C%2520%252Fm%252F01fs1d%252C%2520%252Fm%252F01r_y0&cmpt%3Dq][trends 2]]

* GETTING STARTED WITH EMACS

** first contact

#+BEGIN_SRC shell
$ emacs hello.py
#+END_SRC

no Vim-like mode

** navigate in Emacs way

[[http://www.emacswiki.org/emacs/EmacsNewbieKeyReference][Emacs Newbie Key Reference]]

- C: Control
- M: Meta (alt/option)

- C-x C-f
- C-x s
- C-x C-c

- C-h k
- C-x 1
- C-g

please meet: M-x

#+BEGIN_SRC
M-x display-time-world
#+END_SRC

* MODE

** major mode

.txt .py .cpp .java .org ...

- for a particular file type
- mutually exclusive

*** (trivial) example

#+BEGIN_SRC shell
$ emacs hello.py
#+END_SRC

#+BEGIN_SRC
M-x text-mode
M-x java-mode
#+END_SRC

*** (non-trival) example: [[http://orgmode.org/][org mode]]

major mode

"personal information management and outlining tool for Emacs"

task management
- org-todo (C-c C-t)
- org-agenda L
- org-schedule (C-c C-s)

** minor mode

- "optional features which you can turn on or off"
- "not necessarily specific to a type of file or buffer"

big part of "customizing Emacs"

*** examples

[[http://www.emacswiki.org/InteractivelyDoThings][Interactively Do Things]]

#+BEGIN_SRC
M-x ido-mode
#+END_SRC

[[http://www.emacswiki.org/HighlightCurrentLine][Highlight Current Line]]

#+BEGIN_SRC
M-x hl-line-mode
#+END_SRC

*** think global

turn on ido-mode by default?

turn on hi-line-mode by default?

please meet: ~/.emacs.d/init.el

#+BEGIN_SRC emacs-lisp
(ido-mode t)
#+END_SRC

#+BEGIN_SRC emacs-lisp
(global-hl-line-mode t)
#+END_SRC

* CUSTOMIZE CUSTOMIZE CUSTOMIZE!

** general programming

*** whitspace

please meet: [[http://www.gnu.org/software/emacs/manual/html_node/emacs/Hooks.html][hooks]]

#+BEGIN_SRC elisp
; make whitespaces visible, globally
(global-whitespace-mode 1)

; define target blanks
(setq whitespace-style (quote (face trailing tabs lines)))

; delete blanks at save
(add-hook 'before-save-hook 'delete-trailing-whitespace)
(add-hook 'before-save-hook (lambda() (untabify (point-min) (point-max))))
#+END_SRC

*** line numbers: [[http://elpa.gnu.org/packages/nlinum.html][nlinum]]

please meet: list-packages

#+BEGIN_SRC
M-x list-packages
#+END_SRC

#+BEGIN_SRC
M-x nlinum-mode
#+END_SRC

#+BEGIN_SRC
(global-nlinum-mode 1)
#+END_SRC

*** color-theme: [[http://melpa.org/#/color-theme][color-theme]]

please meet: [[http://melpa.org][MELPA]]

#+BEGIN_SRC emacs-lisp
(require 'package)
(add-to-list 'package-archives
             '("melpa" . "http://melpa.org/packages/") t)
(package-initialize)
#+END_SRC

#+BEGIN_SRC emacs-lisp
(require 'color-theme)
(color-theme-initialize)
(setq color-theme-is-global t)
(color-theme-subtle-hacker)
#+END_SRC

*** auto-complete

"The most intelligent auto-completion extension for GNU Emacs"

[[http://cx4a.org/software/auto-complete/][Auto Complete Mode]]

[[http://melpa.org/#/auto-complete][auto-complete (MELPA)]]

- install
- make it global

#+BEGIN_SRC emacs-lisp
(require 'auto-complete)
(global-auto-complete-mode t)
#+END_SRC

*** (packages... where are they installed?)


* TODO EXPORT YOUR CONF



* CONCLUSION AND FINAL THOUGHTS

** now we know...

- how to get help directly from Emacs
- how to turn on/off modes
- how to install packages

** what's next?

- edit
- read
- write

** thoughts on why and why not

- pinky
- think team
 - learning curve
 - coding standard

- your default editor

*** "there must be something"

[[https://twitter.com/yukihiro_matz/status/539596365865578496][matz (Yukihiro Matsumoto) on twitter]]

[[http://www.slideshare.net/yukihiro_matz/how-emacs-changed-my-life][matz (Yukihiro Matsumoto) on slideshare]]

"Emacs..."
- "taught me freedom for software"
- "taught me how to read code"
- "taught me power of Lisp"
- "made me a hacker"

* GRACIAS!

* THANK YOU!

* \(^O^)/
